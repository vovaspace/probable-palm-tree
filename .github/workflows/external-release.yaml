on:
  repository_dispatch:
    types: [external_release]

name: External Release

jobs:
  update_static:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      ASSET_DIR: /tmp/asset
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Asset Download
        run: gh release download ${{ github.event.client_payload.tag_name }} --repo ${{ github.event.client_payload.repository }} --pattern ${{ github.event.client_payload.asset_name }}.zip --dir $ASSET_DIR
      - name: Move Static
        env:
          START_POINTER: "# GENERATED RESOURCES START"
          END_POINTER: "# GENERATED RESOURCES END"
          RESOURCES_FILE: n.make
          TARGET_DIR: source/build
        run: |
          unzip $ASSET_DIR/${{ github.event.client_payload.asset_name }}.zip -d $ASSET_DIR
          rm -rf $TARGET_DIR
          mkdir $TARGET_DIR
          mv -vf $ASSET_DIR/${{ github.event.client_payload.asset_name }}/* $TARGET_DIR

          NEW_RESOURCES=$(find $TARGET_DIR -type f | grep -v '.map' | perl -e 'while (<>) {chomp; print "$_ $_\n";}' | sort)
          INDENTATION=$(grep -e "$START_POINTER" $RESOURCES_FILE | perl -lane 's/^(\s+)(.*)+$/$1/e; print')

          perl -0777 -pi -e "s/\s+$START_POINTER.*$END_POINTER/
          $INDENTATION$START_POINTER
          ${INDENTATION}RESOURCE(
          $(echo "$NEW_RESOURCES" | perl -e "while (<>) {chomp; print \"$INDENTATION    \$_ \$_\\n\";}" | sed -E 's/\//\\\//g')
          $INDENTATION)
          $INDENTATION$END_POINTER/s" $RESOURCES_FILE
      - name: Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "build: refresh"
          branch: static-refresh-${{ github.event.client_payload.tag_name }}
          title: "build: refresh"
          body: |
            Static Refresh.
          delete-branch: true
